$pgWidths: (
  "10": 10%,
  "20": 20%,
  "30": 30%,
  "40": 40%,
  "50": 50%,
  "60": 60%,
  "70": 70%,
  "80": 80%,
  "90": 90%,
  "100": 100%,
);
body {
  .v-application {
    background: transparent !important;
    .v-messages__message {
      white-space: pre-line !important;
    }
    .v-radio--is-disabled {
      .v-input--selection-controls__input {
        i {
          color: map-get($grey, "base") !important;
        }
      }
    }
  }
  .handle {
    cursor: move;
  }
  .bg-imge-main {
    background-image: url("@/assets/images/bk-img@2x.png") !important;
    background-repeat: repeat;
    background-size: 200px auto !important;
  }

  .data-usage-info {
    width: 80%;
    margin-bottom: 0;
    span {
      font-size: 12px;
      font-weight: 400;
      line-height: 20px;
    }
  }
  // custom app bar content
  .v-toolbar__content {
    justify-content: space-between !important;
  }
  .cursor-pointer {
    pointer-events: auto;
    cursor: pointer;
  }
  .no-cursor-pointer {
    pointer-events: none;
    cursor: inherit;
  }

  .border-table {
    tr:first-child {
      td:first-child {
        border-top: thin solid rgba(0, 0, 0, 0.12);
      }
      td:last-child {
        border-top: thin solid rgba(0, 0, 0, 0.12);
      }
    }
  }

  .border-table
    > .v-data-table__wrapper
    > table
    > tbody
    > tr:not(:first-child)
    > td:not(.v-data-table__mobile-row) {
    border-bottom: thin solid rgba(0, 0, 0, 0.12);
  }

  .v-input {
    &__distable-message {
      .v-text-field {
        &__details {
          display: none !important;
        }
      }
    }
  }
  .v-card {
    @include elevation(4, true);
    overflow: hidden;
    border-radius: map-get($rounded, "lg") !important;
    .v-card__text > .p-header{
      padding: 0;
    }
    &> .p-header {
      padding: $spacer * 4;
    }
  }
  .v-dialog {
    .v-card {
      .v-card__text,
      &> .v-card__text{
        font-size: $font-size-root;
        line-height: $line-height-root;
        color: map-get($material-light, 'text', 'primary');
        *:last-child {
          margin-bottom: 0;
        }
      }
    }
    &> .v-card {
      .p-header,
      &> .v-card__title {
        $p: $spacer * 4;
        padding: $p $p 0;
        margin-bottom: $spacer * 6;
        &:empty {
          display: none;
        }
      }
      &> .v-card__text {
        $px: $spacer * 4;
        padding-left: $px;
        padding-right: $px;
      }
      &> .v-card__title:empty +.v-card__text {
        padding-top: $spacer * 6;
      }
      &> .v-card__actions {
        display: flex;
        justify-content: flex-end;
        gap: $spacer * 4;
        &> .v-btn.v-btn + .v-btn {
          margin: 0;
        }
      }
    }
  }
  .v-card__actions > .v-btn.v-btn {
    padding: 0 $spacer * 4;
  }
  .v-btn {
    text-transform: none;
    &--outlined:not([disabled]) {
      background-color: #ffffff;
      @include elevation(2, 'true');
      font-weight: bold;
    }
    &--text {
      font-weight: bold;
    }
  }
  .v-input--checkbox {
    width: fit-content;
  }
  :not(a) .v-chip:not(.cursor-pointer):not(.v-chip--removable) {
    pointer-events: none;
  }
  .v-chip {
    overflow: visible;
    cursor: inherit;

    &.v-chip--outlined .v-icon {
      color: map-get($material-light, "icons", "active");
    }
    &.rounded-r-0 {
      border-right: 0;
    }
    &.v-size--small {
      .v-chip__content .v-icon {
        font-size: $font-size-root;
        margin-right: $spacer;
      }
    }
  }
  .border-dashed {
    border: 2px dashed map-get($grey, "lighten-1");
  }
  .background-white {
    background-color: #ffffff;
  }

  .media-object {
    align-items: flex-start;
    display: flex;

    &__media {
      margin-right: 0.5rem;
    }

    &__content {
      flex: 1;
    }
  }

  @each $name, $glyph in $pgWidths {
    .w-#{$name} {
      width: $glyph;
    }
  }
  .w-fit-content {
    width: fit-content !important;
  }
  .position-relative {
    position: relative !important;
  }
  .whitespace-pre-line {
    white-space: pre-line !important;
  }

  $expansionPanelBorderColor: map-get($material-light, "selection-controls", "track", "inactive");
  .theme--light.v-expansion-panels .v-expansion-panel:not(:first-child)::after{
    border-color: $expansionPanelBorderColor;
  }
  .v-expansion-panels {
    border-radius: map-get($rounded, "lg");
    border: thin solid $expansionPanelBorderColor;
    overflow: hidden;
    border-width: thin;
    .v-expansion-panel {
      &::before {
        box-shadow: none !important;
      }
    }
    .v-expansion-panel-content {
      margin-top: $spacer * -2;
    }
    .v-expansion-panel-content__wrap {
      $pt: $spacer * 2;
      $px: $spacer * 6;
      $pb: $spacer * 4;
      padding: $pt $px $pb;
      > :first-child {
        margin-top: 0;
      }
      > :last-child {
        margin-bottom: 0;
      }
    }
  }
}

@media (min-width: 600px) {
  .v-application {
    @each $name, $glyph in $pgWidths {
      .w-sm-#{$name} {
        width: $glyph !important;
      }
    }
  }
}
@media (min-width: 960px) {
  .v-application {
    @each $name, $glyph in $pgWidths {
      .w-md-#{$name} {
        width: $glyph !important;
      }
    }
  }
}
@media (min-width: 1264px) {
  .v-application {
    @each $name, $glyph in $pgWidths {
      .w-lg-#{$name} {
        width: $glyph !important;
      }
    }
  }
}

.drop-area {
  padding: 50px;
  align-items: center;
  display: flex;
  justify-content: center;
  flex-direction: column;
  background:  map-get($grey, "lighten-3");
  border: 2px dashed map-get($grey, "lighten-1");
  border-radius: 8px;
  &__opacity {
    opacity: 0.4;
    text-align: center;
  }
}

.nav-custom {
  .v-list {
    .v-list-item {
      margin-bottom: 0 !important;
      &__title {
        font-size: 1rem;
        font-weight: 400;
        line-height: 19px;
      }
    }
  }
}

@for $i from 1 through 12 {
  $gap: $i * $spacer;
  .flex-gap-#{$i} {
    gap: $gap;
  }
  .flex-row-gap-#{$i} {
    row-gap: $gap;
  }
  .flex-column-gap-#{$i} {
    column-gap: $gap;
  }
}
